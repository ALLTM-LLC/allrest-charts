apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: allrestaurants-ingress
  namespace: allrestaurants
  annotations:
    kubernetes.io/ingress.class: "nginx"

    # === SSL / HTTPS / Redirects ===
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "200m"

    # === Timeout & Buffering ===
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "16"
    nginx.ingress.kubernetes.io/proxy-buffers-size: "16k"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "0"

    # === CORS ===
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

    # === GZIP ===
    nginx.ingress.kubernetes.io/configuration-snippet: |
      gzip on;
      gzip_types text/plain text/css application/javascript application/json image/svg+xml;
      gzip_min_length 256;
      gzip_comp_level 5;

      # === Security & Bot Filtering ===
      set $block_bot 0;

      # ✅ Allow good bots (search engines, social)
      if ($http_user_agent ~* "(Googlebot|Bingbot|Slurp|DuckDuckBot|facebot|facebookexternalhit|Twitterbot|LinkedInBot|WhatsApp)") {
        set $block_bot 0;
      }

      # ❌ Block known scrapers or suspicious agents
      if ($http_user_agent ~* "(SemrushBot|AhrefsBot|MJ12bot|DotBot|Baiduspider|Scrapy|python-requests|curl|wget|crawler|axios|node-fetch|postman|http\sclient|okhttp|Go-http-client|Java|bot)") {
        set $block_bot 1;
      }

      # ❌ Block empty User-Agent headers
      if ($http_user_agent = "") {
        set $block_bot 1;
      }

      if ($block_bot = 1) {
        return 403;
      }

      # ✅ Security headers
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

spec:
  rules:
  - host: allrestaurants.eu
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: allrest-frontend
            port:
              number: 80
  - host: mapi.allrestaurants.eu
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: allrest-api
            port:
              number: 80
  tls:
  - hosts:
    - allrestaurants.eu
    - mapi.allrestaurants.eu
    secretName: allrestaurants-tls
