apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: allrest-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "{{ .Values.cors_allow_origin }}"
    nginx.ingress.kubernetes.io/cors-allow-headers: "{{ .Values.cors_allow_headers }}"
    nginx.ingress.kubernetes.io/limit-connections: "20"
    nginx.ingress.kubernetes.io/limit-rpm: "300"
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* /sitemap_images/(.*) {
        rewrite ^/sitemap_images/(.*)$ https://allrest-ams3-space-cdn-06-2023.ams3.digitaloceanspaces.com/$1 redirect;
      }
      if ($host ~* ^www\.(.*)) {
        set $base $1;
        rewrite ^/(.*)$ https://$base/$1 permanent;
      }
    #nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"

spec:
  tls:
  - hosts:
    - "{{ .Values.allUrl }}"
    - "{{ .Values.mainUrl }}"
    secretName: ssl-nginx-eu-new # this secret will be created automatically by the cert-manager issuer
    # then it will create a CSR --> kubectl get certificaterequest
    # then it will create a CRT with the same name a the private key "letsencrypt-nginx-new" --> kubectl get certificate -o wide
    
  rules:
  - host: {{ .Values.adminUrl }}
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: alltm-admin-panel-service
            port:
              number: 80       
  - host: {{ .Values.apiUrl }}
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: alltm-api-service
            port:
              number: 80     
  - host: {{ .Values.wwwUrl }}
    http:
      paths:
      - pathType: Prefix
        path: "/api/v1/auth/allsupplier"
        backend:
          service:
            name: allsupplier-api-service
            port:
              number: 80
      - pathType: Prefix
        path: "/v1/auth/allrest/"
        backend:
          service:
            name: allrest-api-service
            port:
              number: 80
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: allrest-php-service
            port:
              number: 80              
  - host: {{ .Values.mainUrl }}
    http:
      paths:
      - pathType: Prefix
        path: "/api/v1/auth/allsupplier"
        backend:
          service:
            name: allsupplier-api-service
            port:
              number: 80
      - pathType: Prefix
        path: "/v1/auth/allrest"
        backend:
          service:
            name: allrest-api-service
            port:
              number: 80
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: allrest-php-service
            port:
              number: 80              
  - host: "{{ .Values.allUrl }}"
    http:
      paths:
      - pathType: Prefix
        path: "/api/v1/auth/allsupplier"
        backend:
          service:
            name: allsupplier-api-service
            port:
              number: 80
      - pathType: Prefix
        path: "/v1/auth/allrest"
        backend:
          service:
            name: allrest-api-service
            port:
              number: 80
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: allrest-php-service
            port:
              number: 80
